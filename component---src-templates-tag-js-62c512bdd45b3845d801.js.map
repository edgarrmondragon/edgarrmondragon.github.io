{"version":3,"sources":["webpack:///./src/templates/tag.js"],"names":["TagTemplate","data","pageContext","location","siteTitle","site","siteMetadata","title","tag","allMarkdownRemark","edges","totalCount","tagHeader","description","map","node","slug","fields","frontmatter","key","to","pageQuery"],"mappings":"4FAAA,8GAuCeA,UAjCK,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,SAClCC,EAAYH,EAAKI,KAAKC,aAAaC,MACjCC,EAAQN,EAARM,IAF+C,EAGzBP,EAAKQ,kBAA3BC,EAH+C,EAG/CA,MAAOC,EAHwC,EAGxCA,WACTC,EAAeD,EAAN,SACE,IAAfA,EAAmB,GAAK,KADX,iBAEIH,EAFJ,IAIf,OACE,kBAAE,IAAF,CAASL,SAAUA,EAAUI,MAAOH,GAClC,kBAAC,IAAD,CACEG,MAAOH,EACPS,YAAgBL,EAAL,WAEb,6BACE,4BAAKI,GACL,4BACGF,EAAMI,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAT,EAAUQ,EAAKG,YAAfX,MACR,OACE,wBAAIY,IAAKH,GACP,kBAAC,OAAD,CAAMI,GAAIJ,GAAOT,QAKzB,kBAAC,OAAD,CAAMa,GAAG,SAAT,eAQD,IAAMC,EAAS","file":"component---src-templates-tag-js-62c512bdd45b3845d801.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nconst TagTemplate = ({ data, pageContext, location }) => {\n  const siteTitle = data.site.siteMetadata.title\n  const { tag } = pageContext\n  const { edges, totalCount } = data.allMarkdownRemark\n  const tagHeader = `${totalCount} post${\n    totalCount === 1 ? \"\" : \"s\"\n    } tagged with \"${tag}\"`\n\n  return (\n    < Layout location={location} title={siteTitle} >\n      <SEO\n        title={siteTitle}\n        description={`${tag} posts`}\n      />\n      <div>\n        <h1>{tagHeader}</h1>\n        <ul>\n          {edges.map(({ node }) => {\n            const { slug } = node.fields\n            const { title } = node.frontmatter\n            return (\n              <li key={slug}>\n                <Link to={slug}>{title}</Link>\n              </li>\n            )\n          })}\n        </ul>\n        <Link to=\"/tags\">All tags</Link>\n      </div>\n    </Layout>\n  )\n}\n\nexport default TagTemplate\n\nexport const pageQuery = graphql`\n  query($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 2000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}